apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: aws-sqs-crossns-spark
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: aws-sqs
      eventName: example
  triggers:
    - template:
        name: sqs-spark-workflow
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: aws-sqs-spark-workflow-
                namespace: argo-workflows
              spec:
                arguments: {}
                entrypoint: sparkapp
                templates:
                  - arguments: {}
                    name: sparkapp
                    container:
                      securityContext:
                        runAsUser: 0
                      command: [
                          "/bin/sh",
                          "-c",
                          "/opt/spark/bin/spark-submit \
                          --master k8s://https://E428E95793FEFE4880A262A2F9DA10BF.gr7.us-east-1.eks.amazonaws.com \
                          --deploy-mode cluster \
                          --name sparkapp \
                          --class org.apache.spark.examples.SparkPi \
                          --conf spark.kubernetes.namespace=argo-workflows \
                          --conf spark.kubernetes.container.image=apache/spark:v3.2.1 \
                          --conf spark.executor.memory=2G \
                          --conf spark.executor.cores=2 \
                          local:///opt/spark/examples/jars/spark-examples_2.12-3.2.1.jar"
                        ]
                      image: apache/spark:v3.2.1
                      imagePullPolicy: Always
                      resources: {}
